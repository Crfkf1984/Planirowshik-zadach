
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПланировщикНаСервере();
	
	//Настраиваем планировщик
	
	Планировщик.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Час;
	Планировщик.КратностьПериодическогоВарианта = 24;
	
	Планировщик.ОтступСНачалаПереносаШкалыВремени = 9;
	Планировщик.ОтступСКонцаПереносаШкалыВремени = 4;
	
	Планировщик.ФорматПеренесенныхЗаголовковШкалыВремени = "ДФ='дддд, д ММММ гггг'";
	
КонецПроцедуры

&НаСервере

Процедура ЗаполнитьПланировщикНаСервере()
		
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГрафикРаботыГрафикРаботы.СписокДел,
	|	ГрафикРаботыГрафикРаботы.Ссылка.Дата КАК Дата,
	|	ГрафикРаботыГрафикРаботы.НомерСтроки КАК НомерСпискаДел,
	|	ГрафикРаботыГрафикРаботы.Ссылка КАК Документ
	|ИЗ
	|	Документ.ГрафикРаботы.ГрафикРаботы КАК ГрафикРаботыГрафикРаботы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	НомерСпискаДел";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДатаНачала = НачалоДня(Выборка.Дата) + НачалоРаботы(Выборка.НомерСпискаДел);
		ДатаОкончания = НачалоДня(Выборка.Дата) + КонецРаботы(Выборка.НомерСпискаДел); 
		НовыйЭлемент = Планировщик.Элементы.Добавить(ДатаНачала,ДатаОкончания);
		НовыйЭлемент.Текст = Выборка.СписокДел;
		НовыйЭлемент.Значение = Выборка.Документ;
		
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
	
КонецПроцедуры


&НаСервере

Функция НачалоРаботы(НомерСпискаДел)
	
	Если НомерСпискаДел = 1 Тогда 
		
		Возврат 8 * 60 * 60 + 60 * 60;  //9:00
		
	ИначеЕсли НомерСпискаДел = 2 Тогда 
		Возврат 10 * 60 * 60 + 60 * 60; //10 00
		
	ИначеЕсли НомерСпискаДел = 3 Тогда 
		Возврат 11 * 60 * 60 + 60 * 60; //11 00
		
	ИначеЕсли НомерСпискаДел = 4 Тогда 
		Возврат 12 * 60 * 60 + 60 * 60; // 12 00
		
	ИначеЕсли НомерСпискаДел = 4 Тогда 
		Возврат 12 * 60 * 60 + 60 * 60; // 12 00
		
	ИначеЕсли НомерСпискаДел = 5 Тогда 
		Возврат 13 * 60 * 60 + 60 * 60; // 13 00
		
	ИначеЕсли НомерСпискаДел = 6 Тогда 
		Возврат 14 * 60 * 60 + 60 * 60; // 14 00
		
	ИначеЕсли НомерСпискаДел = 7 Тогда 
		Возврат 15 * 60 * 60 + 60 * 60; // 15 00
		
	ИначеЕсли НомерСпискаДел = 8 Тогда 
		Возврат 16 * 60 * 60 + 60 * 60; // 16 00
		
	ИначеЕсли НомерСпискаДел = 9 Тогда 
		Возврат 17 * 60 * 60 + 60 * 60; // 17 00
		
	ИначеЕсли НомерСпискаДел = 10 Тогда 
		Возврат 18 * 60 * 60 + 60 * 60; // 18 00
		
	Иначе
		Возврат 0;
		
		
	КонецЕсли;
	
КонецФункции


Функция КонецРаботы(НомерСпискаДел)
	
	Если НомерСпискаДел = 1 Тогда 
		
		Возврат 10 * 60 * 60 + 60 * 60;  //10:00
		
	ИначеЕсли НомерСпискаДел = 2 Тогда 
		Возврат 11 * 60 * 60 + 60 * 60; //11 00
		
	ИначеЕсли НомерСпискаДел = 3 Тогда 
		Возврат 12 * 60 * 60 + 60 * 60; //12 00
		
	ИначеЕсли НомерСпискаДел = 4 Тогда 
		Возврат 13 * 60 * 60 + 60 * 60; // 13 00
		
	ИначеЕсли НомерСпискаДел = 5 Тогда 
		Возврат 14 * 60 * 60 + 60 * 60; // 14 00
		
	ИначеЕсли НомерСпискаДел = 6 Тогда 
		Возврат 15 * 60 * 60 + 60 * 60; // 15 00
		
	ИначеЕсли НомерСпискаДел = 7 Тогда 
		Возврат 16 * 60 * 60 + 60 * 60; // 16 00
		
	ИначеЕсли НомерСпискаДел = 8 Тогда 
		Возврат 17 * 60 * 60 + 60 * 60; // 17 00
		
	ИначеЕсли НомерСпискаДел = 9 Тогда 
		Возврат 18 * 60 * 60 + 5 * 60;  // 18 00
		
		
	Иначе
		Возврат 0;
		
		
	КонецЕсли;
	
	
	
	
	
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Список дел изменен!" Тогда 
		
		
	КонецЕсли;
	
	Планировщик.Элементы.Очистить();
	ЗаполнитьПланировщикНаСервере();
	
КонецПроцедуры
