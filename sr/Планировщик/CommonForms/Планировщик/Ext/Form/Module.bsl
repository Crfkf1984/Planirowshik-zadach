
//  Настраиваем планировщик
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПланировщикНаСервере();
	
	//Настраиваем планировщик
	
	Планировщик.ЕдиницаПериодическогоВарианта = ТипЕдиницыШкалыВремени.Час;
	Планировщик.КратностьПериодическогоВарианта = 24;
	
	Планировщик.ОтступСНачалаПереносаШкалыВремени = 9;
	Планировщик.ОтступСКонцаПереносаШкалыВремени = 4;
	
	Планировщик.ФорматПеренесенныхЗаголовковШкалыВремени = "ДФ='дддд, д ММММ гггг'";
		
	Планировщик.ТекущиеПериодыОтображения.Очистить();
	НачалоПериода = НачалоНедели(ТекущаяДата());
	КонецПериода = КонецНедели(ТекущаяДата()) - 24 * 60 * 60;
	Планировщик.ТекущиеПериодыОтображения.Добавить(НачалоПериода,КонецПериода);
	
	Заголовок = "График работы " + ПредставлениеПериода(НачалоПериода,КонецПериода);
	
КонецПроцедуры


//Заполняем планировщик данными запросом
&НаСервере

Процедура ЗаполнитьПланировщикНаСервере()
	
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГрафикРаботыГрафикРаботы.СписокДел,
	|	ГрафикРаботыГрафикРаботы.Ссылка.Дата КАК Дата,
	|	ГрафикРаботыГрафикРаботы.НомерСтроки КАК НомерСпискаДел,
	|	ГрафикРаботыГрафикРаботы.Ссылка КАК Документ,
	|	ГрафикРаботыГрафикРаботы.Время КАК Время
	|ИЗ
	|	Документ.ГрафикРаботы.ГрафикРаботы КАК ГрафикРаботыГрафикРаботы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	НомерСпискаДел";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда 
		
		Выборка = РезультатЗапроса.Выбрать();
		
		
		Пока Выборка.Следующий() Цикл
			
			ДатаНачала = НачалоДня(Выборка.Дата) + НачалоРаботы(Выборка.НомерСпискаДел);
			ДатаОкончания = НачалоДня(Выборка.Дата) + КонецРаботы(Выборка.НомерСпискаДел); 
			НовыйЭлемент = Планировщик.Элементы.Добавить(ДатаНачала,ДатаОкончания);
			НовыйЭлемент.Текст = Выборка.СписокДел;
			НовыйЭлемент.Значение = Выборка.Документ;
			
			Если ДатаНачала >= ТекущаяДата() Тогда  //будущие занятия
				
				НовыйЭлемент.ЦветФона = WebЦвета.Белый;
				НовыйЭлемент.ЦветРамки = WebЦвета.Черный;
				
			Иначе 	                            //прошедшие занятия
				
				  НовыйЭлемент.ЦветФона = ВремяОбеда(Выборка.Время);
				
			КонецЕсли;
			
			
		КонецЦикла;
	КонецЕсли;
	
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	
	
КонецПроцедуры

// меняем цвета в зависимости от времени                
&НаСервере
Функция ВремяОбеда(Время) 
	
	Если Время = 12 Тогда
		Возврат WebЦвета.Красный;
		
	ИначеЕсли Время = 16 Тогда
		Возврат WebЦвета.БледноЗеленый;
		
	ИначеЕсли Время = 17 Тогда
		Возврат WebЦвета.БледноЗолотистый;
		
	ИначеЕсли Время = 18 Тогда
		Возврат WebЦвета.Желтый;
	Иначе 
		
		Возврат WebЦвета.Белый;
		
	КонецЕсли;
	
КонецФункции



// Определяем начало по времени списка дел
&НаСервере

Функция НачалоРаботы(НомерСпискаДел)
	
	Если НомерСпискаДел = 1 Тогда 
		
		Возврат 8 * 60 * 60 + 60 * 60;  //9:00
		
	ИначеЕсли НомерСпискаДел = 2 Тогда 
		Возврат 9* 60 * 60 + 60 * 60; //10 00
		
	ИначеЕсли НомерСпискаДел = 3 Тогда 
		Возврат 10 * 60 * 60 + 60 * 60;//11 00
		
	ИначеЕсли НомерСпискаДел = 4 Тогда 
		Возврат 11* 60 * 60 + 60 * 60; // 12 00
				
	ИначеЕсли НомерСпискаДел = 5 Тогда 
		Возврат 12* 60 * 60 + 60 * 60; // 13 00
		
	ИначеЕсли НомерСпискаДел = 6 Тогда 
		Возврат 13* 60 * 60 + 60 * 60; // 14 00
		
	ИначеЕсли НомерСпискаДел = 7 Тогда 
		Возврат 14* 60 * 60 + 60 * 60; // 15 00
		
	ИначеЕсли НомерСпискаДел = 8 Тогда 
		Возврат 15* 60 * 60 + 60 * 60; // 16 00
		
	ИначеЕсли НомерСпискаДел = 9 Тогда 
		Возврат 16* 60 * 60 + 60 * 60; // 17 00
		
	ИначеЕсли НомерСпискаДел = 10 Тогда 
		Возврат 17* 60 * 60 + 60 * 60; // 18 00
		
	Иначе
		Возврат 0;
		
		
	КонецЕсли;
	
КонецФункции


// Определяет конец по времени  списка дел
&НаСервере
Функция КонецРаботы(НомерСпискаДел)
	
	Если НомерСпискаДел = 1 Тогда 
		
		Возврат 9* 60 * 60 + 60 * 60;  //900
		
	ИначеЕсли НомерСпискаДел = 2 Тогда 
		Возврат 10* 60 * 60 + 60 * 60; //1000
		
	ИначеЕсли НомерСпискаДел = 3 Тогда 
		Возврат 11* 60 * 60 + 60 * 60; //1100
		
	ИначеЕсли НомерСпискаДел = 4 Тогда
		Возврат 12* 60 * 60 + 60 * 60; // 1200
		
	ИначеЕсли НомерСпискаДел = 5 Тогда
		Возврат 13* 60 * 60 + 60 * 60; // 1300
		
	ИначеЕсли НомерСпискаДел = 6 Тогда
		Возврат 14* 60 * 60 + 60 * 60; // 1400
		
	ИначеЕсли НомерСпискаДел = 7 Тогда
		Возврат 15* 60 * 60 + 60 * 60; // 1500
		
	ИначеЕсли НомерСпискаДел = 8 Тогда    // 16 00
		Возврат 16* 60 * 60 + 60 * 60; 
		
	ИначеЕсли НомерСпискаДел = 9 Тогда   // 17 00
		Возврат 17* 60 * 60 + 60 * 60; 
		
  ИначеЕсли  НомерСпискаДел = 10 Тогда
    	Возврат 18 * 60 * 60 + 60 * 60;     // 18 00
		
		
	Иначе
		Возврат 0;
		
		
	КонецЕсли;
	
	
	
	
	
	
КонецФункции


//Отслеживает изменения в документе
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Список дел изменен!" Тогда 
		
		
	КонецЕсли;
	
	Планировщик.Элементы.Очистить();
	ЗаполнитьПланировщикНаСервере();
	
КонецПроцедуры

//Убираем выходные дни и задаем заголовок
&НаКлиенте
Процедура ПланировщикПриСменеТекущегоПериодаОтображения(Элемент, ТекущиеПериодыОтображения, СтандартнаяОбработка)
	
	
	СтандартнаяОбработка = Ложь;
	
	НовыйПериод = ТекущиеПериодыОтображения[0];
	
Планировщик.ТекущиеПериодыОтображения.Очистить();

НачалоПериода = НачалоНедели(НовыйПериод.Конец);

КонецПериода  = КонецНедели(НовыйПериод.Конец) - 24 * 60 * 60;

Планировщик.ТекущиеПериодыОтображения.Добавить(НачалоПериода, КонецПериода);

Заголовок = "Расписание занятий " + ПредставлениеПериода(НачалоПериода, КонецПериода);


КонецПроцедуры
